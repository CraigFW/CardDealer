<div class="text-center">
    <h3>Game Settings</h3>
    <div class="row pb-2">
        <div class="offset-3 col-3">
            <span>Number of Decks </span>
        </div>
        <div class="col-3">
            <input disabled="true" type="number" min="1" max="52" @bind-value="gameOptions.NumberOfDecks" />
        </div>
    </div>
    <div class="row pb-2">
        <div class="offset-3 col-3">
            <span>Number of players</span>
        </div>
        <div class="col-3">
            <input type="number" min="1" @bind-value="gameOptions.NumberOfPlayers" />
        </div>
    </div>
    <div class="row">
        <div class="offset-3 col-3">
            <span>Cards per player</span>
        </div>
        <div class="col-3">
            <input type="number" min="1" max="52" @bind-value="gameOptions.NumberOfCardsPerHand" />
        </div>
    </div>
    <div class="row">
        <div class="offset-3 col-3">
            <span>Game Mode</span>
        </div>
        <div class="col-3">
            <InputSelect @bind-Value="gameOptions.Mode">
                @foreach (Enums.GameMode gameMode in Enum.GetValues(typeof(Enums.GameMode)))
                {
                    <option value="@gameMode">@gameMode</option>
                }
            </InputSelect>
        </div>
    </div>
    <div>
        <button class="btn btn-primary" @onclick=ShuffleClicked>Shuffle</button>
    </div>
</div>

@code {
    public GameOptions gameOptions = new GameOptions(1, 1, 1, Enums.GameMode.HighestWins);

    [Parameter]
    public EventCallback<GameOptions> OnShuffleClicked { get; set; }

    public void ShuffleClicked()
    {
        OnShuffleClicked.InvokeAsync(gameOptions);
    }
}
